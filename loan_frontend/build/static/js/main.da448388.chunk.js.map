{"version":3,"sources":["components/LoanDecision.js","components/LoanForm.js","components/InfoPanel.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","closeButton","display","justifyContent","padding","dialog","flexDirection","alignItems","textAlign","message","fontSize","animatedItem","animation","transitions","easing","easeInOut","opacity","transform","LoanDecision","props","onClose","open","decision","businessName","classes","handleClose","Dialog","fullWidth","maxWidth","DialogTitle","className","IconButton","onClick","DialogContent","icon","result","style","color","Fragment","getMessage","API","process","root","flexGrow","title","palette","primary","main","button","margin","spacing","borderRadius","LoanForm","useState","openDecision","setOpenDecision","setDecision","disabled","setDisabled","taxId","requestedAmount","values","setValues","errors","setErrors","formIsValid","formValues","validate","isValid","Object","every","x","handleInputChange","e","target","name","value","temp","startsWith","a","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","data","catch","err","console","log","autoComplete","onSubmit","noValidate","Grid","container","direction","item","xs","TextField","id","label","type","required","error","helperText","onChange","InputProps","inputProps","min","startAdornment","InputAdornment","position","step","Button","variant","size","startIcon","CircularProgress","background","height","breakpoints","up","text","InfoPanel","offset","mixins","toolbar","appBar","backgroundColor","width","App","AppBar","Toolbar","src","alt","sm","md","lg","xl","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","secondary","typography","fontFamily","join","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"gaAWMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,YAAa,CACXC,QAAS,OACTC,eAAgB,WAChBC,QAAS,GAEXC,OAAQ,CACNH,QAAS,OACTI,cAAe,SACfC,WAAY,SACZJ,eAAgB,SAChBK,UAAW,UAEbC,QAAS,CACPC,SAAU,UAEZC,aAAc,CACZC,UAAU,oBAAD,OAAsBZ,EAAMa,YAAYC,OAAOC,WACxDL,SAAU,QAEZ,sBAAuB,CACrB,KAAM,CACJM,QAAS,EACTC,UAAW,qBAEb,OAAQ,CACND,QAAS,EACTC,UAAW,uBAyEFC,MApEf,SAAsBC,GACpB,IAAQC,EAA0CD,EAA1CC,QAASC,EAAiCF,EAAjCE,KAAMC,EAA2BH,EAA3BG,SAAUC,EAAiBJ,EAAjBI,aAC3BC,EAAU1B,IAEhB,SAAS2B,IACPL,GAAQ,GA6CV,OACE,eAACM,EAAA,EAAD,CACEN,QAASK,EACT,kBAAgB,uBAChBJ,KAAMA,EACNM,WAAS,EACTC,SAAS,KALX,UAOE,cAACC,EAAA,EAAD,CAAaC,UAAWN,EAAQvB,YAAhC,SACE,cAAC8B,EAAA,EAAD,CAAYC,QAASP,EAArB,SACE,cAAC,IAAD,QAGJ,cAACQ,EAAA,EAAD,CAAeH,UAAWN,EAAQnB,OAAlC,SAvDJ,WACE,IAAI6B,EAAMC,EAAQ1B,EAgClB,MA/BiB,aAAba,GACFY,EACE,cAAC,IAAD,CACEJ,UAAWN,EAAQb,aACnByB,MAAO,CAAEC,MAAO,aAGpBF,EAAM,UAAMZ,EAAN,yCACNd,EAAO,0BACYc,EADZ,+CAEe,cAAbD,GACTY,EACE,cAAC,IAAD,CACEJ,UAAWN,EAAQb,aACnByB,MAAO,CAAEC,MAAO,aAGpBF,EAAS,0CACT1B,EACE,gEACoB,aAAba,IACTY,EACE,cAAC,IAAD,CACEJ,UAAWN,EAAQb,aACnByB,MAAO,CAAEC,MAAO,aAGpBF,EAAS,qCACT1B,EAAU,kDAIV,eAAC,IAAM6B,SAAP,WACGJ,EACD,oBAAIJ,UAAWN,EAAQf,QAAvB,SAAiC0B,IACjC,4BAAI1B,OAkBqC8B,SCjG3CC,EAAMC,6BAEN3C,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0C,KAAM,CACJC,SAAU,GAEZC,MAAO,CACLlC,SAAU,UACVF,UAAW,SACX6B,MAAOrC,EAAM6C,QAAQC,QAAQC,MAE/BC,OAAQ,CACNC,OAAQjD,EAAMkD,QAAQ,EAAG,EAAG,EAAG,GAC/BC,aAAc,aAmMHC,MA/Lf,WACE,IAAM5B,EAAU1B,IAChB,EAAwCuD,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAgCF,mBAAS,IAAzC,mBAAO/B,EAAP,KAAiBkC,EAAjB,KACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KACA,EAA4BL,mBAAS,CACnCM,MAAO,GACPpC,aAAc,GACdqC,gBAAiB,KAHnB,mBAAOC,EAAP,KAAeC,EAAf,KAMA,EAA4BT,mBAAS,CACnCM,MAAO,GACPpC,aAAc,GACdqC,gBAAiB,KAHnB,mBAAOG,EAAP,KAAeC,EAAf,KAMMC,EAAc,WAA0B,IAAzBC,EAAwB,uDAAXL,EAChCM,IACA,IAAMC,EACJF,EAAWP,OACXO,EAAW3C,cACX2C,EAAWN,iBACXS,OAAOR,OAAOE,GAAQO,OAAM,SAACC,GAAD,MAAa,KAANA,KAErC,OAAOH,GAGT,SAASI,EAAkBC,GACzB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEdd,EAAU,2BAAKD,GAAN,kBAAec,EAAOC,KAC/BT,EAAS,eAAGQ,EAAOC,IAGrB,SAAST,IAA+B,IAAtBD,EAAqB,uDAARL,EACzBgB,EAAI,eAAQd,GAEZ,UAAWG,IAEU,MAArBA,EAAWP,OACU,KAArBO,EAAWP,OACXO,EAAWP,MAAMmB,WAAW,KAE5BD,EAAKlB,MAAQ,8BAEbkB,EAAKlB,MAAQ,IAIb,iBAAkBO,IACpBW,EAAKtD,aACyB,KAA5B2C,EAAW3C,aAAsB,2BAA6B,IAG9D,oBAAqB2C,IAEU,MAA/BA,EAAWN,iBACoB,KAA/BM,EAAWN,iBACXM,EAAWN,gBAAgBkB,WAAW,KAEtCD,EAAKjB,gBAAkB,qCAEvBiB,EAAKjB,gBAAkB,IAI3BI,EAAU,eAAKa,IAnEC,4CAsElB,WAA4BJ,GAA5B,SAAAM,EAAA,sDACEN,EAAEO,iBACFtB,GAAY,GACRO,KACFgB,MAAM,GAAD,OAAIzC,EAAJ,kBAAyB,CAC5B0C,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUzB,KAEpB0B,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLlC,EAAYkC,EAAKpE,UACjBiC,GAAgB,MAEjBoC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAEhClC,GAAY,GAlBd,4CAtEkB,sBA2FlB,OACE,eAAC,IAAMpB,SAAP,WACE,sBACEyD,aAAa,MACbjE,UAAWN,EAAQkB,KACnBsD,SAhGY,4CAiGZC,YAAU,EAJZ,SAME,eAACC,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVjG,eAAe,SACfI,WAAW,SAJb,UAME,cAAC2F,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACE,oBAAIxE,UAAWN,EAAQoB,MAAvB,yBAEF,cAACsD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEC,GAAG,SACHC,MAAM,SACN9B,KAAK,QACL1B,OAAO,QACPZ,MAAM,YACNqE,KAAK,SACL/E,WAAS,EACTgF,UAAQ,EACRC,MAAwB,KAAjB7C,EAAOJ,MACdkD,WAAY9C,EAAOJ,MACnBiB,MAAOf,EAAOF,MACdmD,SAAU,SAACrC,GAAD,OAAOD,EAAkBC,IACnCsC,WAAY,CACVC,WAAY,CAAEC,IAAK,QAIzB,cAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEC,GAAG,gBACHC,MAAM,gBACN9B,KAAK,eACL1B,OAAO,QACPZ,MAAM,YACNV,WAAS,EACTgF,UAAQ,EACRC,MAA+B,KAAxB7C,EAAOxC,aACdsF,WAAY9C,EAAOxC,aACnBqD,MAAOf,EAAOtC,aACduF,SAAU,SAACrC,GAAD,OAAOD,EAAkBC,QAGvC,cAACyB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEC,GAAG,mBACHC,MAAM,mBACN9B,KAAK,kBACL1B,OAAO,QACPZ,MAAM,YACNqE,KAAK,SACL/E,WAAS,EACTgF,UAAQ,EACRC,MAAkC,KAA3B7C,EAAOH,gBACdiD,WAAY9C,EAAOH,gBACnBgB,MAAOf,EAAOD,gBACdkD,SAAU,SAACrC,GAAD,OAAOD,EAAkBC,IACnCsC,WAAY,CACVG,eAC6B,KAA3BrD,EAAOD,gBACL,cAACuD,EAAA,EAAD,CAAgBC,SAAS,QAAzB,eACE,KACNJ,WAAY,CAAEC,IAAK,EAAGI,KAAM,UAIlC,cAACnB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACE,cAACgB,EAAA,EAAD,CACEC,QAAQ,YACRlF,MAAM,UACNV,WAAS,EACT6F,KAAK,QACL1F,UAAWN,EAAQwB,OACnBS,SAAUA,EACViD,KAAK,SACLe,UAAWhE,EAAW,cAACiE,EAAA,EAAD,CAAkBF,KAAK,SAAW,KAR1D,0BAeN,cAAC,EAAD,CACEnG,KAAMiC,EACNlC,QAASmC,EACTjC,SAAUA,EACVC,aAAcsC,EAAOtC,mBChNvBzB,EAAYC,aAAW,SAACC,GAAD,YAAY,CACvC0C,MAAI,GACFxC,QAAS,OACTI,cAAe,SACfE,UAAW,SACXD,WAAY,SACZJ,eAAgB,SAChBkC,MAAO,OACPjC,QAAS,WACTuH,WAAY,+DACZC,OAAO,sBATL,wBAUE5H,EAAM6H,YAAYC,GAAG,MAVvB,iCAU8D,CAC9DF,OAAO,uBAXP,cAaD5H,EAAM6H,YAAYC,GAAG,MAAQ,CAC5BF,OAAO,uBAdP,GAiBJ9E,QAAS,CACPT,MAAOrC,EAAM6C,QAAQC,QAAQC,MAE/BH,MAAO,CACLlC,SAAU,UAEZqH,KAAM,CACJrH,SAAU,OACVuC,OAAQ,OA6BG+E,MAzBf,WACE,IAAMxG,EAAU1B,IAEhB,OACE,qBAAKgC,UAAWN,EAAQkB,KAAxB,SACE,eAAC,IAAMJ,SAAP,WACE,qBAAIR,UAAWN,EAAQoB,MAAvB,oBACS,sBAAMd,UAAWN,EAAQsB,QAAzB,0BADT,OAGA,mBAAGhB,UAAWN,EAAQuG,KAAtB,qGAIA,gEACA,oBAAGjG,UAAWN,EAAQuG,KAAtB,sHAGE,uBAHF,qDCtCFjI,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCiI,OAAQjI,EAAMkI,OAAOC,QACrBC,OAAO,CACLC,gBAAiB,QAEnBF,QAAS,CACPG,MAAO,OACP1G,SAAU,SAEZc,KAAM,CACJC,SAAU,OA6BC4F,MAzBf,WACE,IAAM/G,EAAU1B,IAEhB,OACE,eAAC,IAAMwC,SAAP,WACE,cAACkG,EAAA,EAAD,CAAQpB,SAAS,QAAQtF,UAAWN,EAAQ4G,OAA5C,SACE,cAACK,EAAA,EAAD,CAAS3G,UAAWN,EAAQ2G,QAA5B,SACE,qBAAKO,IAAI,iBAAiBC,IAAI,0BAGlC,qBAAK7G,UAAWN,EAAQyG,SACxB,qBAAKnG,UAAWN,EAAQkB,KAAxB,SACE,eAACwD,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAM7F,WAAW,SAA3C,UACA,cAAC2F,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIsC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA5C,SACI,cAAC,EAAD,MAEF,cAAC7C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIsC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA5C,SACE,cAAC,EAAD,eC5BGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB3D,MAAK,YAAkD,IAA/C4D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,iBCARjJ,EAAQwJ,YAAY,CACxB3G,QAAS,CACPC,QAAS,CACPC,KAAM,WAER0G,UAAW,CACT1G,KAAM,YAGV2G,WAAY,CACVC,WAAY,CACV,UACA,gBACA,qBACA,aACA,mBACA,QACA,aACA,sBACA,mBACA,qBACAC,KAAK,QAIXC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAehK,MAAOA,EAAtB,SACE,cAAC,EAAD,QAGJiK,SAASC,eAAe,SAM1BlB,M","file":"static/js/main.da448388.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport CheckCircleTwoToneIcon from \"@material-ui/icons/CheckCircleTwoTone\";\r\nimport InfoTwoToneIcon from \"@material-ui/icons/InfoTwoTone\";\r\nimport CancelTwoToneIcon from \"@material-ui/icons/CancelTwoTone\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  closeButton: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    padding: 0,\r\n  },\r\n  dialog: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    textAlign: \"center\",\r\n  },\r\n  message: {\r\n    fontSize: \"1.5rem\",\r\n  },\r\n  animatedItem: {\r\n    animation: `$myEffect 1000ms ${theme.transitions.easing.easeInOut}`,\r\n    fontSize: \"6rem\",\r\n  },\r\n  \"@keyframes myEffect\": {\r\n    \"0%\": {\r\n      opacity: 0,\r\n      transform: \"translateY(-100%)\",\r\n    },\r\n    \"100%\": {\r\n      opacity: 1,\r\n      transform: \"translateY(0%)\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction LoanDecision(props) {\r\n  const { onClose, open, decision, businessName } = props;\r\n  const classes = useStyles();\r\n\r\n  function handleClose() {\r\n    onClose(false);\r\n  }\r\n\r\n  function getMessage() {\r\n    var icon, result, message;\r\n    if (decision === \"Approved\") {\r\n      icon = (\r\n        <CheckCircleTwoToneIcon\r\n          className={classes.animatedItem}\r\n          style={{ color: \"#71be35\" }}\r\n        />\r\n      );\r\n      result = `${businessName}, your application has been approved!`\r\n      message =\r\n      `Congratulations ${businessName}! the loan will be funded to your account.`;\r\n    } else if (decision === \"Undecided\") {\r\n      icon = (\r\n        <InfoTwoToneIcon\r\n          className={classes.animatedItem}\r\n          style={{ color: \"#ffb702\" }}\r\n        />\r\n      );\r\n      result = \"Ops! We need more information to decide\";\r\n      message =\r\n        \"Please contact us at (212) 235-7378 to continue the process.\";\r\n    } else if (decision === \"Declined\") {\r\n      icon = (\r\n        <CancelTwoToneIcon\r\n          className={classes.animatedItem}\r\n          style={{ color: \"#ff623e\" }}\r\n        />\r\n      );\r\n      result = \"Your application has been declined\";\r\n      message = \"Do not worry! You can try again in the future.\";\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {icon}\r\n        <h1 className={classes.message}>{result}</h1>\r\n        <p>{message}</p>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"loan-decision-result\"\r\n      open={open}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle className={classes.closeButton}>\r\n        <IconButton onClick={handleClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </DialogTitle>\r\n      <DialogContent className={classes.dialog}>{getMessage()}</DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default LoanDecision;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport LoanDecision from \"./LoanDecision\";\r\n\r\nconst API = process.env.REACT_APP_API;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    fontSize: \"1.75rem\",\r\n    textAlign: \"center\",\r\n    color: theme.palette.primary.main,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(2, 2, 0, 0),\r\n    borderRadius: \"50rem\",\r\n  },\r\n}));\r\n\r\nfunction LoanForm() {\r\n  const classes = useStyles();\r\n  const [openDecision, setOpenDecision] = useState(false);\r\n  const [decision, setDecision] = useState(\"\");\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [values, setValues] = useState({\r\n    taxId: \"\",\r\n    businessName: \"\",\r\n    requestedAmount: \"\",\r\n  });\r\n\r\n  const [errors, setErrors] = useState({\r\n    taxId: \"\",\r\n    businessName: \"\",\r\n    requestedAmount: \"\",\r\n  });\r\n\r\n  const formIsValid = (formValues = values) => {\r\n    validate();\r\n    const isValid =\r\n      formValues.taxId &&\r\n      formValues.businessName &&\r\n      formValues.requestedAmount &&\r\n      Object.values(errors).every((x) => x === \"\");\r\n\r\n    return isValid;\r\n  };\r\n\r\n  function handleInputChange(e) {\r\n    const { name, value } = e.target;\r\n\r\n    setValues({ ...values, [name]: value });\r\n    validate({ [name]: value });\r\n  }\r\n\r\n  function validate(formValues = values) {\r\n    var temp = { ...errors };\r\n\r\n    if (\"taxId\" in formValues) {\r\n      if (\r\n        formValues.taxId === \"0\" ||\r\n        formValues.taxId === \"\" ||\r\n        formValues.taxId.startsWith(\"-\")\r\n      ) {\r\n        temp.taxId = \"Please enter a valid tax ID\";\r\n      } else {\r\n        temp.taxId = \"\";\r\n      }\r\n    }\r\n\r\n    if (\"businessName\" in formValues) {\r\n      temp.businessName =\r\n        formValues.businessName === \"\" ? \"Enter your business name\" : \"\";\r\n    }\r\n\r\n    if (\"requestedAmount\" in formValues) {\r\n      if (\r\n        formValues.requestedAmount === \"0\" ||\r\n        formValues.requestedAmount === \"\" ||\r\n        formValues.requestedAmount.startsWith(\"-\")\r\n      ) {\r\n        temp.requestedAmount = \"Enter the amount of money you need\";\r\n      } else {\r\n        temp.requestedAmount = \"\";\r\n      }\r\n    }\r\n\r\n    setErrors({ ...temp });\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setDisabled(true); \r\n    if (formIsValid()) {\r\n      fetch(`${API}/loan_decision`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(values),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setDecision(data.decision);\r\n          setOpenDecision(true);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n    setDisabled(false);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form\r\n        autoComplete=\"off\"\r\n        className={classes.root}\r\n        onSubmit={handleSubmit}\r\n        noValidate\r\n      >\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs={10}>\r\n            <h1 className={classes.title}>Apply now</h1>\r\n          </Grid>\r\n          <Grid item xs={10}>\r\n            <TextField\r\n              id=\"tax-id\"\r\n              label=\"Tax Id\"\r\n              name=\"taxId\"\r\n              margin=\"dense\"\r\n              color=\"secondary\"\r\n              type=\"number\"\r\n              fullWidth\r\n              required\r\n              error={errors.taxId !== \"\"}\r\n              helperText={errors.taxId}\r\n              value={values.taxId}\r\n              onChange={(e) => handleInputChange(e)}\r\n              InputProps={{\r\n                inputProps: { min: 0 },\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={10}>\r\n            <TextField\r\n              id=\"business-name\"\r\n              label=\"Business Name\"\r\n              name=\"businessName\"\r\n              margin=\"dense\"\r\n              color=\"secondary\"\r\n              fullWidth\r\n              required\r\n              error={errors.businessName !== \"\"}\r\n              helperText={errors.businessName}\r\n              value={values.businessName}\r\n              onChange={(e) => handleInputChange(e)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={10}>\r\n            <TextField\r\n              id=\"requested-amount\"\r\n              label=\"Requested Amount\"\r\n              name=\"requestedAmount\"\r\n              margin=\"dense\"\r\n              color=\"secondary\"\r\n              type=\"number\"\r\n              fullWidth\r\n              required\r\n              error={errors.requestedAmount !== \"\"}\r\n              helperText={errors.requestedAmount}\r\n              value={values.requestedAmount}\r\n              onChange={(e) => handleInputChange(e)}\r\n              InputProps={{\r\n                startAdornment:\r\n                  values.requestedAmount !== \"\" ? (\r\n                    <InputAdornment position=\"start\">$</InputAdornment>\r\n                  ) : null,\r\n                inputProps: { min: 0, step: 0.01 },\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={10}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              fullWidth\r\n              size=\"large\"\r\n              className={classes.button}\r\n              disabled={disabled}\r\n              type=\"submit\"\r\n              startIcon={disabled ? <CircularProgress size=\"1rem\"/> : null}\r\n            >\r\n              Apply\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      <LoanDecision\r\n        open={openDecision}\r\n        onClose={setOpenDecision}\r\n        decision={decision}\r\n        businessName={values.businessName}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default LoanForm;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    textAlign: \"center\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    color: \"#fff\",\r\n    padding: \"0 1.3rem\",\r\n    background: \"linear-gradient(141deg,rgb(7 36 72) 47%,rgb(242 56 15) 164%)\",\r\n    height: `calc(100vh - 56px)`,\r\n    [`${theme.breakpoints.up(\"xs\")} and (orientation: landscape)`]: {\r\n      height: `calc(100vh - 48px)`,\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      height: `calc(100vh - 64px)`,\r\n    },\r\n  },\r\n  primary: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  title: {\r\n    fontSize: \"1.8rem\",\r\n  },\r\n  text: {\r\n    fontSize: \"1rem\",\r\n    margin: 0\r\n  }\r\n}));\r\n\r\nfunction InfoPanel() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <React.Fragment>\r\n        <h1 className={classes.title}>\r\n          What's <span className={classes.primary}>LendingFront</span>?\r\n        </h1>\r\n        <p className={classes.text}>\r\n          LendingFront is a loan system designed for businesses that need fast\r\n          access to capital.\r\n        </p>\r\n        <h3>Why apply for a business loan?</h3>\r\n        <p className={classes.text}>\r\n          A business loan can help you make your next purchase, fund growth, or\r\n          manage cash flow for your business.\r\n          <br />\r\n          Request yours now and grow your business!\r\n        </p>\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InfoPanel;\r\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nimport LoanForm from \"./components/LoanForm\";\nimport InfoPanel from \"./components/InfoPanel\";\n\nconst useStyles = makeStyles((theme) => ({\n  offset: theme.mixins.toolbar,\n  appBar:{\n    backgroundColor: \"#fff\"\n  },\n  toolbar: {\n    width: \"100%\",\n    maxWidth: \"185px\",\n  },\n  root: {\n    flexGrow: 1,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar className={classes.toolbar}>\n          <img src=\"color_logo.svg\" alt=\"LendingFront logo\"/>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.offset} />\n      <div className={classes.root}>\n        <Grid container direction=\"row\" alignItems=\"center\">\n        <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\n            <InfoPanel />\n          </Grid>\n          <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\n            <LoanForm />\n          </Grid>\n        </Grid>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#f2380f\",\n    },\n    secondary: {\n      main: \"#072448\",\n    },\n  },\n  typography: {\n    fontFamily: [\n      'Poppins',\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}